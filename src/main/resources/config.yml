# ===========================
# OreoEssentials - config.yml
# ===========================
# Quick start:
# - Single server? Set essentials.storage: yaml (or json). Done.
# - Cross-server homes? Set essentials.storage: mongodb, point all servers to the SAME MongoDB,
#   give each server a unique server.name, keep RabbitMQ enabled, and make sure your proxy
#   (Bungee/Velocity) is configured so players can be switched between servers.

server:
  # Unique logical name for THIS server (used to tag who "owns" a home)
  name: "survival-1"

# -------- Essentials data store (homes/warps/spawn/back) --------
essentials:
  # yaml | json | mongodb
  # yaml/json = local-only (no cross-server home directory)
  # mongodb   = enables cross-server home ownership + shared data
  storage: "mongodb"

# Mongo used by essentials.storage: mongodb (and can also be reused by economy.mongodb)
storage:
  mongo:
    uri: "mongodb://localhost:27017"
    database: "oreo"
    # Collections used by essentials when storage=mongodb:
    #   - <prefix>homes
    #   - <prefix>warps
    #   - <prefix>meta
    #   - <prefix>home_directory  (cross-server: stores which server owns each home)
    collectionPrefix: "oreo_"

# -------- Cross-server transport (FYI) --------
# The plugin switches servers via the proxy plugin-message channels ("BungeeCord"/"bungeecord:main").
# For *home teleport coordination* across servers, your code also supports RabbitMQ packets.
network:
  cross-server: true
  transport: "plugin_message"   # Server switching uses proxy plugin messaging


# --- Cross-server feature toggles ---
crossserverhomes: true
crossserverwarps: true
crossserverspawn: true
crossservereconomy: true

# --- Cross-server player state sync ---
crossserverinv: true   # master on/off for the whole feature

# default toggle state for new players (can be changed per player via /sync)
playersync:
  inventory: true
  xp:        true
  health:    true
  hunger:    true

# -------- Homes limits --------
homes:
  # If permissionBased = true, the highest "oreo.homes.<N>" permission wins
  maxPerPlayer: 5
  permissionBased: true

# -------- Teleport requests (/tpa) --------
tpa:
  timeoutSeconds: 60

# -------- Skins debugging --------
debug:
  skins: true

# -------- boosbar --------
#---------------------------------------------------------------------
#---------------------------------------------------------------------
#---------------------------------------------------------------------

bossbar:
  enabled: true
  text: "<gradient:#FF1493:#00FF7F>Welcome</gradient> {player}"
  color: PURPLE         # WHITE, BLUE, GREEN, PINK, PURPLE, RED, YELLOW
  style: SEGMENTED_10   # SOLID, SEGMENTED_6, SEGMENTED_10, SEGMENTED_12, SEGMENTED_20
  progress: 1.0         # 0.0..1.0
  update-ticks: 40      # re-render every 2s (20 ticks = 1s)




# -------- Scoreboard (sidebar) --------
#---------------------------------------------------------------------
#---------------------------------------------------------------------
#---------------------------------------------------------------------
scoreboard:
  enabled: true
  default-enabled: true
  update-ticks: 20
  title:
    frame-ticks: 10
    frames:
      - "&d&lOreo&f&lEssentials"
      - "&5&lOreo&f&lEssentials"
      - "&d&lOreo&f&lEssentials"
  lines:
    - "&7Player: &f{player}"
    - "&7Money: &f%vault_eco_balance_formatted%"
    - "&7Online: &f%server_online%/%server_max_players%"
    - ""
    - "&7TPS: &f%server_tps_1%"
    - "&7Ping: &f%player_ping%"
  worlds:
    whitelist: []   # show only in these worlds (empty = all)
    blacklist: []   # or hide in these worlds


#---------------------------------------------------------------------
#---------------------------------------------------------------------
#---------------------------------------------------------------------



# -------- Economy (Vault-backed) --------
economy:
  enabled: true                 # false => no economy DB + no economy commands
  # none | json | mongodb | postgresql
  type: "json"
  baltop-size: 10
  # Generic balance rules (used by JSON; other backends may reference these too)
  starting-balance: 100.0
  max-balance: 1000000000
  min-balance: 0.0
  allow-negative: false

  # MongoDB economy backend (used if type = mongodb)
  mongodb: #if you need a mongodb server, contact us on discord https://discord.gg/A6wCGJD2Ez we cna have one for you for 2$ per month
    uri: "mongodb://localhost:27017"
    database: "minecraft_economy"
    collection: "balances"

  # PostgreSQL economy backend (used if type = postgresql)
  postgresql:
    url: "jdbc:postgresql://localhost:5432/minecraft_economy"
    user: "postgres"
    password: "postgres211"
    table: "balances"

# -------- Redis cache (optional; used by economy caches) --------
redis:
  enabled: false
  host: "localhost"
  port: 6379
  password: ""
  # TTL used by RedisManager for balances (seconds)
  cache-expiry: 600

# -------- RabbitMQ (optional; used by ChatSync AND home-teleport packets) --------
# Enable this on *every* server if you want cross-server /home to auto-teleport after proxy switch.
rabbitmq: #if you need a rabbitmq database and you don't have one, contact us on discord https://discord.gg/A6wCGJD2Ez we cna have one for you for 2$ per month
  enabled: false
  uri: "amqps://user:pass@host/vhost"

# -------- Messages (economy examples) --------
messages:
  pay-sent: "You have paid {receiver} {amount} USD!"
  pay-received: "{sender} has paid you {amount} USD!"
  money-admin: "You have been given {amount} USD!"
  money-paid: "{sender} has paid you {amount} USD!"
  cheque-created: "You have created a cheque for {amount} USD!"
  cheque-redeemed: "You have redeemed a cheque for {amount} USD!"

logging:
  debug: false

# -------- Portals --------
portals:
  enabled: true
  cooldown_ms: 1000
  sound: "ENTITY_ENDERMAN_TELEPORT"
  particle: "PORTAL"
  particle_count: 20
  allow_keep_yaw_pitch: true

# -------- JumpPads --------
jumpads:
  enabled: true
  default_power: 1.2
  default_upward: 1.0
  default_useLookDir: true
  cooldown_ms: 800
  sound: "ENTITY_FIREWORK_ROCKET_LAUNCH"
  particle: "CLOUD"
  particle_count: 12


playervaults:
  enabled: true
  storage: auto                 # auto|yaml|mongodb  -> "auto" uses mongodb when essentials.storage=mongodb
  collection: "oreo_playervaults"

  # SLOTS mode (not rows!)
  slots-cap: 54                 # 1..54
  default-slots: 9              # fallback if nothing else matches

  deny-message: "&cYou don't have permission to access vault &f#%id%&c."
  sounds:
    open: UI_BUTTON_CLICK
    deny: ENTITY_VILLAGER_NO

  # Title for the inventory (shows visible rows); <id> and <rows> are supported
  vault-title: "&8Vault &f#<id> &7(<rows>x9)"

  menu:
    title: "&8Player Vaults"
    item-unlocked-name: "&aVault &f#<id>"
    item-locked-name: "&cVault &f#<id> &7(locked)"
    item-unlocked-lore: "&7Click to open"
    item-locked-lore: "&7You don't have access"

  vaults-per-rank:
    global:
      default: 1               # default rank: unlock 1 vault ID (vault #1)
      vip: 4
      mvp: 5
      admin: 6
    per-vault:
      "1":
        default: 2             # <-- 2 SLOTS in vault #1 for default rank
        vip: 5                  # VIP: 5 SLOTS in vault #1
      "2":
        vip: 6                  # VIP: 6 SLOTS in vault #2

mobs:
  show-healthmobs: true
  healthbar:
    update-interval-ticks: 5
    view-distance: 32.0
    require-line-of-sight: true
    spawn-per-tick-cap: 40   # NEW: max new holograms created per sweeper tick

    format:
      - "&f<name>"
      - "&c❤ <bar> &7(<current>/<max>)"
    show-numbers: true
    segments: 10
    full: "█"
    empty: "░"
    rounded: true
    left-edge: "❮"
    right-edge: "❯"
    color-full: "&a"
    color-mid: "&e"
    color-low: "&c"
    mid-threshold: 0.5
    low-threshold: 0.2
    include-passive: true
    include-players: false
    only-when-damaged: false
    line-offset: 0.35
    y-offset: 0.5
    use-mythicmobs: true








# -------- Join messages (Afelius) --------
Join_messages:
  enable: true
  look_like_player: true
  player_name: "<gradient:#FF1493:#00FF7F>Afelius</gradient>"
  player_prefix: "<gradient:#8A2BE2:#00FFFF>[</gradient>"
  delimiter: " | "
  join_message_delay: 0
  first_join: "<gradient:#FF1493:#00FF7F>Welcome</gradient> <gradient:#00FF7F:#1E90FF>{name}</gradient> <gradient:#1E90FF:#FF1493>to the server for the first time!</gradient>"
  rejoin_message: "<gradient:#00FF7F:#1E90FF>{name}</gradient> <gradient:#1E90FF:#FF1493>has joined the game.</gradient>"

# -------- Automatic messages (Afelius) --------
Automatic_message:
  enable: true
  look_like_player: true
  player_name: "<gradient:#00FF7F:#1E90FF>Afelius</gradient>"
  player_prefix: "<gradient:#8A2BE2:#00FFFF>[</gradient>"
  delimiter: " | "
  messages:
    message1:
      text: "<gradient:#FF1493:#00FF7F>Don't forget to check our</gradient> <gradient:#00FF7F:#1E90FF>website</gradient> <gradient:#1E90FF:#FF1493>for updates!</gradient>"
      timer_loop: 50
    message2:
      text: "<gradient:#1E90FF:#FFD700> Type /help for a list of</gradient> <gradient:#FFD700:#FF1493>commands!</gradient>"
      timer_loop: 60

# -------- Chat bot conversations (Afelius) --------
conversations:
  afelius:
    custom_call_name: "afelius"
    self_mention_reply: "<gradient:#FF1493:#00FF7F>Hello</gradient>, <gradient:#00FF7F:#1E90FF>{name}</gradient>, <gradient:#1E90FF:#FF1493>how can I assist you today?</gradient>"
    player_name: "<gradient:#FF1493:#00FF7F>Afelius</gradient>"
    player_prefix: "<gradient:#00FF7F:#FF1493>[</gradient>"
    delimiter: " | "
    questions:
      question1:
        keyword: "help"
        key_phrase: "i need help"
        replies:
          - "<gradient:#FF1493:#00FF7F>Sure</gradient>, <gradient:#00FF7F:#1E90FF>{name}</gradient>, <gradient:#1E90FF:#FF1493>what do you need help with?</gradient>"
          - "<gradient:#00FF7F:#1E90FF>Feel free to</gradient> <gradient:#1E90FF:#FF1493>ask any questions!</gradient>"
      question2:
        keyword: "commands"
        key_phrase: "what are the commands"
        replies:
          - "<gradient:#FF1493:#00FF7F>You can type /help to see all</gradient> <gradient:#00FF7F:#1E90FF>available</gradient> <gradient:#1E90FF:#FF1493>commands.</gradient>"
          - "<gradient:#00FF7F:#1E90FF>Check the</gradient> <gradient:#1E90FF:#FFD700>website for a detailed</gradient> <gradient:#FFD700:#FF1493>command list.</gradient>"
  bot:
    custom_call_name: "bot"
    self_mention_reply: "<gradient:#1E90FF:#FFD700>Hello,</gradient> <gradient:#FFD700:#FF1493>{name},</gradient> <gradient:#FF1493:#1E90FF>how can I assist you today?</gradient>"
    player_name: "<gradient:#FFD700:#FF1493>BOT</gradient>"
    player_prefix: "<gradient:#1E90FF:#FFD700>[</gradient>"
    delimiter: " | "
    questions:
      question1:
        keyword: "help"
        key_phrase: "i need help"
        replies:
          - "<gradient:#FFD700:#1E90FF>Sure,</gradient> <gradient:#1E90FF:#FF1493>{name},</gradient> <gradient:#FF1493:#FFD700>what do you need help with?</gradient>"
          - "<gradient:#1E90FF:#FF1493>Feel free to</gradient> <gradient:#FF1493:#FFD700>ask any questions!</gradient>"
      question2:
        keyword: "commands"
        key_phrase: "what are the commands"
        replies:
          - "<gradient:#FFD700:#1E90FF>You can type /help to see all</gradient> <gradient:#1E90FF:#FF1493>available</gradient> <gradient:#FF1493:#FFD700>commands.</gradient>"
          - "<gradient:#FF1493:#1E90FF>Check the</gradient> <gradient:#1E90FF:#FFD700>website for a detailed</gradient> <gradient:#FFD700:#FF1493>command list.</gradient>"
